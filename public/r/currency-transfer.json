{
  "name": "currency-transfer",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "input"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\r\nimport { useState } from \"react\"\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { ArrowRight, RefreshCw, Copy, Check } from \"lucide-react\"\r\n\r\ninterface CheckmarkProps {\r\n  size?: number\r\n  strokeWidth?: number\r\n  color?: string\r\n  className?: string\r\n}\r\n\r\nconst draw = {\r\n  hidden: { pathLength: 0, opacity: 0 },\r\n  visible: (i: number) => ({\r\n    pathLength: 1,\r\n    opacity: 1,\r\n    transition: {\r\n      pathLength: {\r\n        delay: i * 0.2,\r\n        type: \"spring\" as const,\r\n        duration: 1.5,\r\n        bounce: 0.2,\r\n        ease: \"easeInOut\" as const,\r\n      },\r\n      opacity: { delay: i * 0.2, duration: 0.2 },\r\n    },\r\n  }),\r\n}\r\n\r\nexport function Checkmark({ size = 100, strokeWidth = 2, color = \"currentColor\", className = \"\" }: CheckmarkProps) {\r\n  return (\r\n    <motion.svg\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 100 100\"\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      className={className}\r\n    >\r\n      <title>Animated Checkmark</title>\r\n      <motion.circle\r\n        cx=\"50\"\r\n        cy=\"50\"\r\n        r=\"40\"\r\n        stroke={color}\r\n        variants={draw}\r\n        custom={0}\r\n        style={{\r\n          strokeWidth,\r\n          strokeLinecap: \"round\",\r\n          fill: \"transparent\",\r\n        }}\r\n      />\r\n      <motion.path\r\n        d=\"M30 50L45 65L70 35\"\r\n        stroke={color}\r\n        variants={draw}\r\n        custom={1}\r\n        style={{\r\n          strokeWidth,\r\n          strokeLinecap: \"round\",\r\n          strokeLinejoin: \"round\",\r\n          fill: \"transparent\",\r\n        }}\r\n      />\r\n    </motion.svg>\r\n  )\r\n}\r\n\r\nexport default function CurrencyTransfer() {\r\n  const [copied, setCopied] = useState(false)\r\n  const [isHovering, setIsHovering] = useState(false)\r\n  const [showDetails, setShowDetails] = useState(false)\r\n  const [isResetting, setIsResetting] = useState(false)\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(\"Transaction ID: TRX-28974651\")\r\n    setCopied(true)\r\n    setTimeout(() => setCopied(false), 2000)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setIsResetting(true)\r\n    setTimeout(() => {\r\n      setIsResetting(false)\r\n      setShowDetails(false)\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className=\"w-full max-w-sm mx-auto p-6 min-h-[300px] flex flex-col justify-center bg-zinc-50 dark:bg-zinc-950 border border-zinc-200 dark:border-zinc-800 backdrop-blur-xs relative overflow-hidden\"\r\n    >\r\n      {/* Background pulse effect */}\r\n      <motion.div\r\n        className=\"absolute inset-0 bg-emerald-500/5 rounded-xl\"\r\n        animate={{\r\n          scale: [1, 1.05, 1],\r\n          opacity: [0.5, 0.8, 0.5],\r\n        }}\r\n        transition={{\r\n          duration: 4,\r\n          repeat: Number.POSITIVE_INFINITY,\r\n          ease: \"easeInOut\",\r\n        }}\r\n      />\r\n\r\n      <CardContent className=\"space-y-4 flex flex-col items-center justify-center relative z-10\">\r\n        <AnimatePresence mode=\"wait\">\r\n          {!isResetting ? (\r\n            <motion.div\r\n              className=\"flex justify-center\"\r\n              initial={{ opacity: 0, scale: 0.8 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.8 }}\r\n              transition={{\r\n                duration: 0.4,\r\n                ease: [0.4, 0, 0.2, 1],\r\n                scale: {\r\n                  type: \"spring\",\r\n                  damping: 15,\r\n                  stiffness: 200,\r\n                },\r\n              }}\r\n            >\r\n              <div className=\"relative\">\r\n                <motion.div\r\n                  className=\"absolute inset-0 blur-xl bg-emerald-500/10 dark:bg-emerald-500/20 rounded-full\"\r\n                  initial={{ opacity: 0, scale: 0.8 }}\r\n                  animate={{ opacity: 1, scale: 1 }}\r\n                  transition={{\r\n                    delay: 0.2,\r\n                    duration: 0.8,\r\n                    ease: \"easeOut\",\r\n                  }}\r\n                  whileHover={{\r\n                    scale: 1.2,\r\n                    opacity: 0.8,\r\n                    transition: { duration: 0.3 },\r\n                  }}\r\n                />\r\n                <Checkmark\r\n                  size={80}\r\n                  strokeWidth={4}\r\n                  color=\"rgb(16 185 129)\"\r\n                  className=\"relative z-10 dark:drop-shadow-[0_0_10px_rgba(0,0,0,0.1)]\"\r\n                />\r\n              </div>\r\n            </motion.div>\r\n          ) : (\r\n            <motion.div\r\n              className=\"flex justify-center\"\r\n              initial={{ opacity: 0, rotate: 0 }}\r\n              animate={{ opacity: 1, rotate: 360 }}\r\n              exit={{ opacity: 0 }}\r\n              transition={{ duration: 0.8 }}\r\n            >\r\n              <RefreshCw size={80} className=\"text-emerald-500\" />\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <motion.div\r\n          className=\"space-y-2 text-center w-full\"\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{\r\n            delay: 0.2,\r\n            duration: 0.6,\r\n            ease: [0.4, 0, 0.2, 1],\r\n          }}\r\n        >\r\n          <motion.h2\r\n            className=\"text-lg text-zinc-900 dark:text-zinc-100 tracking-tighter font-semibold uppercase\"\r\n            initial={{ opacity: 0, y: 5 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 1, duration: 0.4 }}\r\n            whileHover={{\r\n              scale: 1.05,\r\n              transition: { duration: 0.2 },\r\n            }}\r\n          >\r\n            Transfer Successful\r\n          </motion.h2>\r\n\r\n          <AnimatePresence mode=\"wait\">\r\n            <motion.div\r\n              className=\"flex items-center gap-4\"\r\n              initial={{ opacity: 0, scale: 0.95 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{\r\n                delay: 1.2,\r\n                duration: 0.4,\r\n                ease: [0.4, 0, 0.2, 1],\r\n              }}\r\n            >\r\n              <motion.div\r\n                className=\"flex-1 bg-zinc-100/50 dark:bg-zinc-800/50 rounded-xl p-3 border border-zinc-200/50 dark:border-zinc-700/50 backdrop-blur-md\"\r\n                whileHover={{\r\n                  scale: 1.02,\r\n                  boxShadow: \"0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)\",\r\n                  transition: { duration: 0.2 },\r\n                }}\r\n                onHoverStart={() => setIsHovering(true)}\r\n                onHoverEnd={() => setIsHovering(false)}\r\n              >\r\n                <div className=\"flex flex-col items-start gap-2\">\r\n                  <div className=\"space-y-1.5\">\r\n                    <span className=\"text-xs font-medium text-zinc-700 dark:text-zinc-300 flex items-center gap-1.5\">\r\n                      <motion.svg\r\n                        className=\"w-3 h-3\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        animate={isHovering ? { y: [-1, 1, -1] } : {}}\r\n                        transition={{ duration: 1, repeat: Number.POSITIVE_INFINITY }}\r\n                      >\r\n                        <title>From</title>\r\n                        <path d=\"M12 19V5M5 12l7-7 7 7\" />\r\n                      </motion.svg>\r\n                      From\r\n                    </span>\r\n                    <div className=\"flex items-center gap-2.5 group transition-all\">\r\n                      <motion.span\r\n                        className=\"inline-flex items-center justify-center w-7 h-7 rounded-lg bg-zinc-200 dark:bg-zinc-700 shadow-lg border border-zinc-300 dark:border-zinc-600 text-sm font-medium text-zinc-900 dark:text-zinc-100\"\r\n                        whileHover={{\r\n                          scale: 1.15,\r\n                          rotate: [0, -5, 5, 0],\r\n                          transition: { duration: 0.5 },\r\n                        }}\r\n                      >\r\n                        $\r\n                      </motion.span>\r\n                      <motion.span\r\n                        className=\"font-medium text-zinc-900 dark:text-zinc-100 tracking-tight\"\r\n                        whileHover={{\r\n                          color: \"#10b981\",\r\n                          transition: { duration: 0.2 },\r\n                        }}\r\n                      >\r\n                        500.00 USD\r\n                      </motion.span>\r\n                    </div>\r\n                  </div>\r\n                  <motion.div\r\n                    className=\"w-full h-px bg-gradient-to-r from-transparent via-zinc-300 dark:via-zinc-700 to-transparent\"\r\n                    animate={\r\n                      isHovering\r\n                        ? {\r\n                            scaleX: [1, 1.1, 1],\r\n                            opacity: [0.5, 1, 0.5],\r\n                          }\r\n                        : {}\r\n                    }\r\n                    transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY }}\r\n                  />\r\n                  <div className=\"space-y-1.5\">\r\n                    <span className=\"text-xs font-medium text-zinc-700 dark:text-zinc-300 flex items-center gap-1.5\">\r\n                      <motion.svg\r\n                        className=\"w-3 h-3\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        animate={isHovering ? { y: [1, -1, 1] } : {}}\r\n                        transition={{ duration: 1, repeat: Number.POSITIVE_INFINITY }}\r\n                      >\r\n                        <title>To</title>\r\n                        <path d=\"M12 5v14M5 12l7 7 7-7\" />\r\n                      </motion.svg>\r\n                      To\r\n                    </span>\r\n                    <div className=\"flex items-center gap-2.5 group transition-all\">\r\n                      <motion.span\r\n                        className=\"inline-flex items-center justify-center w-7 h-7 rounded-lg bg-zinc-200 dark:bg-zinc-700 shadow-lg border border-zinc-300 dark:border-zinc-600 text-sm font-medium text-zinc-900 dark:text-zinc-100\"\r\n                        whileHover={{\r\n                          scale: 1.15,\r\n                          rotate: [0, 5, -5, 0],\r\n                          transition: { duration: 0.5 },\r\n                        }}\r\n                      >\r\n                        €\r\n                      </motion.span>\r\n                      <motion.span\r\n                        className=\"font-medium text-zinc-900 dark:text-zinc-100 tracking-tight\"\r\n                        whileHover={{\r\n                          color: \"#10b981\",\r\n                          transition: { duration: 0.2 },\r\n                        }}\r\n                      >\r\n                        460.00 EUR\r\n                      </motion.span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            </motion.div>\r\n          </AnimatePresence>\r\n\r\n          <motion.div\r\n            className=\"w-full text-xs text-zinc-500 dark:text-zinc-400 mt-2 text-center\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 1.4, duration: 0.4 }}\r\n            whileHover={{\r\n              scale: 1.05,\r\n              color: \"rgb(16 185 129)\",\r\n              transition: { duration: 0.2 },\r\n            }}\r\n          >\r\n            Exchange Rate: 1 USD = 0.92 EUR\r\n          </motion.div>\r\n\r\n          <AnimatePresence>\r\n            {showDetails && (\r\n              <motion.div\r\n                className=\"mt-4 p-3 bg-zinc-100/50 dark:bg-zinc-800/50 rounded-xl border border-zinc-200/50 dark:border-zinc-700/50\"\r\n                initial={{ opacity: 0, height: 0, y: -20 }}\r\n                animate={{ opacity: 1, height: \"auto\", y: 0 }}\r\n                exit={{ opacity: 0, height: 0, y: -20 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <div className=\"text-xs text-zinc-700 dark:text-zinc-300 space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Date:</span>\r\n                    <span className=\"text-zinc-900 dark:text-zinc-100\">April 24, 2025</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Fee:</span>\r\n                    <span className=\"text-zinc-900 dark:text-zinc-100\">2.50 USD</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Transaction ID:</span>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <span className=\"text-zinc-900 dark:text-zinc-100\">TRX-28974651</span>\r\n                      <motion.button\r\n                        onClick={handleCopy}\r\n                        whileHover={{ scale: 1.1 }}\r\n                        whileTap={{ scale: 0.9 }}\r\n                        className=\"text-zinc-500 dark:text-zinc-400 hover:text-emerald-500\"\r\n                      >\r\n                        {copied ? <Check size={14} /> : <Copy size={14} />}\r\n                      </motion.button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n\r\n          <div className=\"pt-4 flex justify-center gap-3\">\r\n            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                className=\"bg-transparent border border-zinc-300 dark:border-zinc-700 text-zinc-900 dark:text-zinc-100 hover:bg-zinc-200 dark:hover:bg-zinc-800\"\r\n                onClick={handleReset}\r\n              >\r\n                <RefreshCw size={14} className=\"mr-2\" />\r\n                New Transfer\r\n              </Button>\r\n            </motion.div>\r\n            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                className=\"bg-transparent border border-zinc-300 dark:border-zinc-700 text-zinc-900 dark:text-zinc-100 hover:bg-zinc-200 dark:hover:bg-zinc-800\"\r\n                onClick={() => setShowDetails(!showDetails)}\r\n              >\r\n                {showDetails ? \"Hide Details\" : \"View Details\"}\r\n                <motion.div animate={{ rotate: showDetails ? 90 : 0 }} transition={{ duration: 0.2 }} className=\"ml-2\">\r\n                  <ArrowRight size={14} />\r\n                </motion.div>\r\n              </Button>\r\n            </motion.div>\r\n          </div>\r\n        </motion.div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}",
      "path": "currency-transfer.tsx",
      "target": "/components/workable/currency-transfer.tsx"
    }
  ]
}