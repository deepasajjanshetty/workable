{
  "name": "input-10",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { ChevronRight, ChevronLeft } from \"lucide-react\";\r\n\r\nconst moodStates = [\r\n    { value: 0, label: \"Not Happy\", color: \"#EF4444\" },\r\n    { value: 50, label: \"Good\", color: \"#F59E0B\" },\r\n    { value: 100, label: \"Very Good\", color: \"#10B981\" },\r\n] as const;\r\n\r\nfunction EmotionFace({ value }: { value: number }) {\r\n    const getFaceConfig = () => {\r\n        if (value === 0) {\r\n            return {\r\n                color: \"#EF4444\",\r\n                eyes: {\r\n                    left: \"M6 10 Q8 8 10 10\",\r\n                    right: \"M14 10 Q16 8 18 10\",\r\n                },\r\n                mouth: \"M8 16 Q12 13 16 16\",\r\n            };\r\n        }\r\n\r\n        if (value === 50) {\r\n            return {\r\n                color: \"#F59E0B\",\r\n                eyes: {\r\n                    left: \"M6 9 L10 9\",\r\n                    right: \"M14 9 L18 9\",\r\n                },\r\n                mouth: \"M8 16 L16 16\",\r\n            };\r\n        }\r\n\r\n        return {\r\n            color: \"#10B981\",\r\n            eyes: {\r\n                left: \"M6 10 Q8 12 10 10\",\r\n                right: \"M14 10 Q16 12 18 10\",\r\n            },\r\n            mouth: \"M8 16 Q12 19 16 16\",\r\n        };\r\n    };\r\n\r\n    const face = getFaceConfig();\r\n\r\n    return (\r\n        <svg\r\n            width=\"160\"\r\n            height=\"160\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"transition-all duration-300 ease-in-out\"\r\n        >\r\n            <title>Face Mood</title>\r\n            {/* Left Eye */}\r\n            <path\r\n                d={face.eyes.left}\r\n                stroke={face.color}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n            />\r\n\r\n            {/* Right Eye */}\r\n            <path\r\n                d={face.eyes.right}\r\n                stroke={face.color}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n            />\r\n\r\n            {/* Mouth */}\r\n            <path\r\n                d={face.mouth}\r\n                stroke={face.color}\r\n                strokeWidth=\"2.5\"\r\n                strokeLinecap=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default function Input_10() {\r\n    const [value, setValue] = useState(100);\r\n\r\n    const adjustValue = (direction: \"left\" | \"right\") => {\r\n        const currentIndex = moodStates.findIndex(\r\n            (state) => state.value === value\r\n        );\r\n        const newIndex =\r\n            direction === \"left\"\r\n                ? Math.max(0, currentIndex - 1)\r\n                : Math.min(moodStates.length - 1, currentIndex + 1);\r\n\r\n        setValue(moodStates[newIndex].value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full max-w-sm space-y-4\">\r\n            <div className=\"relative flex items-center justify-center gap-8 py-4\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => adjustValue(\"left\")}\r\n                    disabled={value === 0}\r\n                    className={cn(\r\n                        \"p-2 rounded-full hover:bg-zinc-100 dark:hover:bg-zinc-800\",\r\n                        \"text-zinc-500 hover:text-zinc-700\",\r\n                        \"dark:text-zinc-400 dark:hover:text-zinc-300\",\r\n                        \"disabled:opacity-50 disabled:cursor-not-allowed\",\r\n                        \"transition-colors\"\r\n                    )}\r\n                >\r\n                    <ChevronLeft className=\"w-6 h-6\" />\r\n                </button>\r\n\r\n                <EmotionFace value={value} />\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => adjustValue(\"right\")}\r\n                    disabled={value === 100}\r\n                    className={cn(\r\n                        \"p-2 rounded-full hover:bg-zinc-100 dark:hover:bg-zinc-800\",\r\n                        \"text-zinc-500 hover:text-zinc-700\",\r\n                        \"dark:text-zinc-400 dark:hover:text-zinc-300\",\r\n                        \"disabled:opacity-50 disabled:cursor-not-allowed\",\r\n                        \"transition-colors\"\r\n                    )}\r\n                >\r\n                    <ChevronRight className=\"w-6 h-6\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "path": "input-10.tsx",
      "target": "/components/workable/input-10.tsx"
    }
  ]
}