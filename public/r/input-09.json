{
  "name": "input-09",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "popover"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { AnimatePresence, motion } from \"motion/react\";\r\nimport Image from \"next/image\";\r\nimport { useState } from \"react\";\r\n\r\nconst MAX_TEAM_SIZE = 4;\r\n\r\nconst animations = {\r\n    container: {\r\n        initial: { opacity: 0, y: 20 },\r\n        animate: { opacity: 1, y: 0 },\r\n        exit: { opacity: 0, y: -20 },\r\n    },\r\n    avatar: {\r\n        initial: { opacity: 0, scale: 0.8 },\r\n        animate: { opacity: 1, scale: 1, transition: { duration: 0.3 } },\r\n        exit: { opacity: 0, scale: 0.8, transition: { duration: 0.15 } },\r\n    },\r\n    vibration: {\r\n        initial: { x: 0 },\r\n        vibrate: { x: [-5, 5, -5, 5, 0], transition: { duration: 0.3 } },\r\n    },\r\n} as const;\r\n\r\nconst avatarUrls = [\r\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-01-n0x8HFv8EUetf9z6ht0wScJKoTHqf8.png\",\r\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-02-albo9B0tWOSLXCVZh9rX9KFxXIVWMr.png\",\r\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-03-JateJIUhtd3PXynaMG9TDWQ55j5AVP.png\",\r\n    \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-04-uuYHWIRvVPi01gEt6NwnGyjqLeeZhz.png\",\r\n] as const;\r\n\r\nexport default function Input09() {\r\n    const [peopleCount, setPeopleCount] = useState(1);\r\n    const [isVibrating, setIsVibrating] = useState(false);\r\n\r\n    function handleIncrement(e: React.MouseEvent) {\r\n        e.preventDefault();\r\n        if (peopleCount < MAX_TEAM_SIZE) setPeopleCount(peopleCount + 1);\r\n        else triggerVibration();\r\n    }\r\n\r\n    function handleDecrement(e: React.MouseEvent) {\r\n        e.preventDefault();\r\n        if (peopleCount > 1) setPeopleCount(peopleCount - 1);\r\n        else triggerVibration();\r\n    }\r\n\r\n    function triggerVibration() {\r\n        setIsVibrating(true);\r\n        setTimeout(() => setIsVibrating(false), 300);\r\n    }\r\n\r\n    function renderAvatars() {\r\n        return Array.from({ length: peopleCount }, (_, i) => (\r\n            <motion.div\r\n                key={i}\r\n                variants={animations.avatar}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"exit\"\r\n                className=\"flex items-center justify-center\"\r\n                style={{\r\n                    zIndex: peopleCount - i,\r\n                    marginLeft: i === 0 ? 0 : -24,\r\n                }}\r\n            >\r\n                <Image\r\n                    src={avatarUrls[i % avatarUrls.length]}\r\n                    width={96}\r\n                    height={96}\r\n                    alt={`Team member ${i + 1}`}\r\n                    className=\"rounded-full object-cover\"\r\n                />\r\n            </motion.div>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            variants={animations.container}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            className=\"flex w-full flex-col items-center justify-center gap-8\"\r\n        >\r\n            <div className=\"relative h-24 w-full flex justify-center\">\r\n                <AnimatePresence>{renderAvatars()}</AnimatePresence>\r\n            </div>\r\n            <motion.div\r\n                variants={\r\n                    isVibrating\r\n                        ? {\r\n                              initial: { x: 0 },\r\n                              vibrate: {\r\n                                  x: [0, -5, 5, -5, 5, 0],\r\n                                  transition: { duration: 0.3 },\r\n                              },\r\n                          }\r\n                        : undefined\r\n                }\r\n                initial=\"initial\"\r\n                animate={isVibrating ? \"vibrate\" : \"initial\"}\r\n                className=\"flex items-center gap-8\"\r\n            >\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={handleDecrement}\r\n                    className=\"h-12 w-12 rounded-full border-zinc-200 dark:border-zinc-800 \r\n                             bg-white dark:bg-zinc-900 \r\n                             hover:bg-zinc-50 dark:hover:bg-zinc-800/50 \r\n                             text-zinc-900 dark:text-zinc-100 cursor-pointer\"\r\n                >\r\n                    <span className=\"text-2xl font-medium\">-</span>\r\n                </button>\r\n\r\n                <motion.span\r\n                    key={peopleCount}\r\n                    variants={animations.container}\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"exit\"\r\n                    className=\"text-2xl font-medium text-zinc-900 dark:text-zinc-100\"\r\n                >\r\n                    {peopleCount}\r\n                </motion.span>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={handleIncrement}\r\n                    className=\"h-12 w-12 rounded-full border-zinc-200 dark:border-zinc-800 \r\n                             bg-white dark:bg-zinc-900 \r\n                             hover:bg-zinc-50 dark:hover:bg-zinc-800/50 \r\n                             text-zinc-900 dark:text-zinc-100 cursor-pointer\"\r\n                >\r\n                    <span className=\"text-2xl font-medium\">+</span>\r\n                </button>\r\n            </motion.div>\r\n        </motion.div>\r\n    );\r\n}",
      "path": "input-09.tsx",
      "target": "/components/workable/input-09.tsx"
    }
  ]
}