{
  "name": "input-05",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Eye, EyeOff, Check, X } from \"lucide-react\";\r\n\r\nconst passwordRequirements = [\r\n    { label: \"8+ characters\", test: (v: string) => v.length >= 8 },\r\n    { label: \"Number\", test: (v: string) => /\\d/.test(v) },\r\n    { label: \"Lowercase\", test: (v: string) => /[a-z]/.test(v) },\r\n    { label: \"Uppercase\", test: (v: string) => /[A-Z]/.test(v) },\r\n    {\r\n        label: \"Special (!@#$)\",\r\n        test: (v: string) => /[!@#$%^&*(),.?\":{}|<>]/.test(v),\r\n    },\r\n] as const;\r\n\r\nexport default function Input_05() {\r\n    const [value, setValue] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const getStrength = (value: string): number => {\r\n        if (!value) return 0;\r\n        return (\r\n            passwordRequirements.filter((req) => req.test(value)).length * 20\r\n        );\r\n    };\r\n\r\n    const strength = getStrength(value);\r\n    const strengthLabel =\r\n        strength <= 40 ? \"Weak\" : strength <= 80 ? \"Medium\" : \"Strong\";\r\n\r\n    return (\r\n        <div className=\"w-full space-y-2\">\r\n            <label\r\n                htmlFor=\"input-06\"\r\n                className=\"block text-sm font-medium text-zinc-700 dark:text-zinc-300\"\r\n            >\r\n                Label\r\n            </label>\r\n\r\n            <div className=\"relative\">\r\n                <input\r\n                    id=\"input-06\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        setValue(e.target.value);\r\n                    }}\r\n                    placeholder=\"Enter your password\"\r\n                    className={cn(\r\n                        \"w-full px-3 py-2 pr-10\",\r\n                        \"rounded-md border\",\r\n                        \"bg-white dark:bg-black/5\",\r\n                        \"border-zinc-200 dark:border-zinc-800\",\r\n                        \"focus:outline-hidden focus:ring-2\",\r\n                        \"focus:ring-zinc-900/20 dark:focus:ring-zinc-100/20\"\r\n                    )}\r\n                />\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    aria-label={\r\n                        showPassword ? \"Hide password\" : \"Show password\"\r\n                    }\r\n                    className=\"absolute right-3 top-1/2 -translate-y-1/2\r\n                    text-zinc-400 hover:text-zinc-900 \r\n                    dark:text-zinc-500 dark:hover:text-zinc-100\r\n                    transition-colors\"\r\n                >\r\n                    {showPassword ? (\r\n                        <EyeOff className=\"w-4 h-4\" />\r\n                    ) : (\r\n                        <Eye className=\"w-4 h-4\" />\r\n                    )}\r\n                </button>\r\n            </div>\r\n\r\n            {value && (\r\n                <div className=\"space-y-1\">\r\n                    <div className=\"h-1 w-full bg-zinc-100 dark:bg-zinc-800 rounded-full\">\r\n                        <div\r\n                            className=\"h-full bg-zinc-900 dark:bg-zinc-100 transition-all duration-300\"\r\n                            style={{ width: `${strength}%` }}\r\n                        />\r\n                    </div>\r\n                    <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\r\n                        Strength:{\" \"}\r\n                        <span className=\"font-medium\">{strengthLabel}</span>\r\n                    </p>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"space-y-1.5 text-sm text-zinc-500 dark:text-zinc-400\">\r\n                {passwordRequirements.map(({ label, test }) => (\r\n                    <div key={label} className=\"flex items-center gap-2\">\r\n                        {test(value) ? (\r\n                            <Check className=\"w-3.5 h-3.5 text-zinc-900 dark:text-zinc-100\" />\r\n                        ) : (\r\n                            <X className=\"w-3.5 h-3.5\" />\r\n                        )}\r\n                        <span>{label}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "path": "/components/workable/input/input-05.tsx",
      "target": "/components/workable/input-05.tsx"
    }
  ]
}