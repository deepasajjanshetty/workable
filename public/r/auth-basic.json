{
  "name": "auth-basic",
  "type": "registry:block",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "input",
    "separator"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "import {\r\n    Card,\r\n    CardContent,\r\n    CardDescription,\r\n    CardHeader,\r\n    CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport Image from \"next/image\";\r\nimport { AuthForm } from \"./auth-form\";\r\nimport { SocialLogin } from \"./social-login\";\r\n\r\nexport default function AuthBasic() {\r\n    return (\r\n        <div className=\"flex min-h-screen items-center justify-center p-4 bg-white dark:bg-black\">\r\n            <div className=\"w-full max-w-[450px]\">\r\n                <div className=\"w-full h-48 relative mb-4\">\r\n                    <Image\r\n                        src=\"https://images.unsplash.com/photo-1551434678-e076c223a692?w=400&h=200&fit=crop&q=80\"\r\n                        alt=\"To the moon illustration\"\r\n                        fill\r\n                        className=\"object-cover\"\r\n                    />\r\n                </div>\r\n                <Card className=\"w-full border-0 shadow-lg\">\r\n                    <CardHeader className=\"space-y-2\">\r\n                        <CardTitle className=\"text-2xl font-semibold tracking-tight text-black dark:text-white\">\r\n                            Welcome back\r\n                        </CardTitle>\r\n                        <CardDescription className=\"text-neutral-600 dark:text-neutral-400\">\r\n                            Enter your credentials to access your account\r\n                        </CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-6\">\r\n                        <AuthForm />\r\n                        <SocialLogin />\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "path": "auth-basic.tsx",
      "target": "/components/workable/auth-basic.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Loader2, LockIcon } from \"lucide-react\";\r\n\r\nexport function AuthForm() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    async function handleSubmit(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        const formData = new FormData(e.target as HTMLFormElement);\r\n        const email = formData.get(\"email\") as string;\r\n        const password = formData.get(\"password\") as string;\r\n\r\n        try {\r\n            /**\r\n             * To update with your actual authentication logic\r\n             */\r\n            await new Promise((resolve) => setTimeout(resolve, 2000));\r\n            console.log(\"Signing in with:\", email, password);\r\n        } catch (error) {\r\n            console.error(\"Authentication error:\", error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\" noValidate>\r\n            <div className=\"space-y-2\">\r\n                <label\r\n                    htmlFor=\"email\"\r\n                    className=\"text-sm font-medium text-black dark:text-white\"\r\n                >\r\n                    Email\r\n                </label>\r\n                <div className=\"relative\">\r\n                    <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500 flex items-center justify-center w-4 h-4\">\r\n                        @\r\n                    </span>\r\n                    <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"name@example.com\"\r\n                        required\r\n                        disabled={isLoading}\r\n                        className=\"pl-10 h-12 bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-1 focus-visible:ring-ring\"\r\n                        autoComplete=\"email\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n                <label className=\"text-sm font-medium text-black dark:text-white\">\r\n                    Password\r\n                </label>\r\n                <div className=\"relative\">\r\n                    <LockIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500\" />\r\n                    <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        required\r\n                        disabled={isLoading}\r\n                        className=\"pl-10 h-12 bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-1 focus-visible:ring-ring\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                className=\"w-full h-12 text-base font-medium bg-black text-white hover:bg-neutral-800 dark:bg-white dark:text-black dark:hover:bg-neutral-200 transition-colors\"\r\n            >\r\n                {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n                {isLoading ? \"Signing in...\" : \"Sign in\"}\r\n            </Button>\r\n        </form>\r\n    );\r\n}",
      "path": "auth-form.tsx",
      "target": "/components/workable/auth-form.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\nexport function SocialLogin() {\r\n    const [isGoogleLoading, setIsGoogleLoading] = useState(false);\r\n\r\n    async function handleGoogleSignIn() {\r\n        setIsGoogleLoading(true);\r\n        try {\r\n            /**\r\n             * To update with your actual authentication logic\r\n             */\r\n            await new Promise((resolve) => setTimeout(resolve, 1500));\r\n            console.log(\"Signing in with Google\");\r\n        } catch (error) {\r\n            console.error(\"Google sign-in error:\", error);\r\n        } finally {\r\n            setIsGoogleLoading(false);\r\n        }\r\n    }\r\n\r\n    function GoogleIcon() {\r\n        return (\r\n            <svg\r\n                className=\"mr-2 h-4 w-4\"\r\n                aria-hidden=\"true\"\r\n                focusable=\"false\"\r\n                data-prefix=\"fab\"\r\n                data-icon=\"google\"\r\n                role=\"img\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 488 512\"\r\n            >\r\n                <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\"\r\n                ></path>\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                    <Separator className=\"w-full border-neutral-200 dark:border-neutral-800\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-xs uppercase\">\r\n                    <span className=\"bg-white dark:bg-black px-2 text-neutral-600 dark:text-neutral-400\">\r\n                        Or continue with\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <Button\r\n                variant=\"outline\"\r\n                onClick={handleGoogleSignIn}\r\n                disabled={isGoogleLoading}\r\n                className=\"w-full h-12 font-medium border border-neutral-200 dark:border-neutral-800 hover:bg-neutral-50 dark:bg-black dark:hover:bg-neutral-900 transition-colors\"\r\n            >\r\n                {isGoogleLoading ? (\r\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                ) : (\r\n                    <GoogleIcon />\r\n                )}\r\n                {isGoogleLoading ? \"Connecting...\" : \"Sign in with Google\"}\r\n            </Button>\r\n        </>\r\n    );\r\n}",
      "path": "social-login.tsx",
      "target": "/components/workable/social-login.tsx"
    }
  ]
}