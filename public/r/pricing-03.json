{
  "name": "pricing-03",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Check, ArrowRight } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface Feature {\r\n    name: string;\r\n    included: \"starter\" | \"pro\" | \"all\" | null;\r\n}\r\n\r\nconst features: Feature[] = [\r\n    { name: \"Basic Analytics\", included: \"starter\" },\r\n    { name: \"Up to 5 team members\", included: \"starter\" },\r\n    { name: \"Basic support\", included: \"starter\" },\r\n    { name: \"Advanced Analytics\", included: \"pro\" },\r\n    { name: \"Up to 20 team members\", included: \"pro\" },\r\n    { name: \"Priority support\", included: \"pro\" },\r\n    { name: \"Custom integrations\", included: \"all\" },\r\n    { name: \"Unlimited team members\", included: \"all\" },\r\n    { name: \"24/7 phone support\", included: \"all\" },\r\n];\r\n\r\nconst plans = [\r\n    {\r\n        name: \"Starter\",\r\n        price: { monthly: 15, yearly: 144 },\r\n        level: \"starter\" as const,\r\n    },\r\n    {\r\n        name: \"Pro\",\r\n        price: { monthly: 49, yearly: 470 },\r\n        level: \"pro\" as const,\r\n    },\r\n    {\r\n        name: \"Enterprise\",\r\n        price: { monthly: 99, yearly: 990 },\r\n        level: \"all\" as const,\r\n    },\r\n];\r\n\r\nexport default function Pricing_03() {\r\n    const [isYearly, setIsYearly] = useState(false);\r\n    const [selectedPlan, setSelectedPlan] = useState<string>(\"pro\");\r\n\r\n    return (\r\n        <div className=\"w-full max-w-3xl mx-auto px-4\">\r\n            <div className=\"flex justify-end mb-4 sm:mb-8\">\r\n                <div className=\"inline-flex items-center gap-2 text-xs sm:text-sm\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsYearly(false)}\r\n                        className={cn(\r\n                            \"px-3 py-1 rounded-md transition-colors\",\r\n                            !isYearly\r\n                                ? \"bg-zinc-100 dark:bg-zinc-800\"\r\n                                : \"text-zinc-500\"\r\n                        )}\r\n                    >\r\n                        Monthly\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsYearly(true)}\r\n                        className={cn(\r\n                            \"px-3 py-1 rounded-md transition-colors\",\r\n                            isYearly\r\n                                ? \"bg-zinc-100 dark:bg-zinc-800\"\r\n                                : \"text-zinc-500\"\r\n                        )}\r\n                    >\r\n                        Yearly\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\r\n                {plans.map((plan) => (\r\n                    <button\r\n                        key={plan.name}\r\n                        type=\"button\"\r\n                        onClick={() => setSelectedPlan(plan.level)}\r\n                        className={cn(\r\n                            \"flex-1 p-4 rounded-xl text-left transition-all\",\r\n                            \"border border-zinc-200 dark:border-zinc-800\",\r\n                            selectedPlan === plan.level &&\r\n                                \"ring-2 ring-blue-500 dark:ring-blue-400\"\r\n                        )}\r\n                    >\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                            <span className=\"text-sm font-medium\">\r\n                                {plan.name}\r\n                            </span>\r\n                            {plan.level === \"pro\" && (\r\n                                <span className=\"text-xs bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300 px-2 py-0.5 rounded-full\">\r\n                                    Popular\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"text-2xl font-bold\">\r\n                            ${isYearly ? plan.price.yearly : plan.price.monthly}\r\n                            <span className=\"text-sm font-normal text-zinc-500\">\r\n                                /{isYearly ? \"year\" : \"month\"}\r\n                            </span>\r\n                        </div>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"border border-zinc-200 dark:border-zinc-800 rounded-xl overflow-hidden\">\r\n                <div className=\"overflow-x-auto\">\r\n                    <div className=\"min-w-[640px] divide-y divide-zinc-200 dark:divide-zinc-800\">\r\n                        <div className=\"flex items-center p-4 bg-zinc-50 dark:bg-zinc-900\">\r\n                            <div className=\"flex-1 text-sm font-medium\">Features</div>\r\n                            <div className=\"flex items-center gap-8 text-sm\">\r\n                                {plans.map((plan) => (\r\n                                    <div\r\n                                        key={plan.level}\r\n                                        className=\"w-16 text-center font-medium\"\r\n                                    >\r\n                                        {plan.name}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        {features.map((feature) => (\r\n                            <div\r\n                                key={feature.name}\r\n                                className={cn(\r\n                                    \"flex items-center p-4 transition-colors\",\r\n                                    feature.included === selectedPlan &&\r\n                                        \"bg-blue-50/50 dark:bg-blue-900/20\"\r\n                                )}\r\n                            >\r\n                                <div className=\"flex-1 text-sm\">{feature.name}</div>\r\n                                <div className=\"flex items-center gap-8 text-sm\">\r\n                                    {plans.map((plan) => (\r\n                                        <div\r\n                                            key={plan.level}\r\n                                            className={cn(\r\n                                                \"w-16 flex justify-center\",\r\n                                                plan.level === selectedPlan &&\r\n                                                    \"font-medium\"\r\n                                            )}\r\n                                        >\r\n                                            {shouldShowCheck(\r\n                                                feature.included,\r\n                                                plan.level\r\n                                            ) ? (\r\n                                                <Check className=\"w-5 h-5 text-blue-500\" />\r\n                                            ) : (\r\n                                                <span className=\"text-zinc-300 dark:text-zinc-700\">\r\n                                                    -\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-8 text-center\">\r\n                <Button className=\"w-full sm:w-auto bg-blue-500 hover:bg-blue-600 text-white px-8 py-2 rounded-xl\">\r\n                    Get started with{\" \"}\r\n                    {plans.find((p) => p.level === selectedPlan)?.name}\r\n                    <ArrowRight className=\"w-4 h-4 ml-2\" />\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction shouldShowCheck(\r\n    included: Feature[\"included\"],\r\n    level: string\r\n): boolean {\r\n    if (included === \"all\") return true;\r\n    if (included === \"pro\" && (level === \"pro\" || level === \"all\")) return true;\r\n    if (\r\n        included === \"starter\" &&\r\n        (level === \"starter\" || level === \"pro\" || level === \"all\")\r\n    )\r\n        return true;\r\n    return false;\r\n}",
      "path": "pricing-03.tsx",
      "target": "components/workable/pricing-03.tsx"
    }
  ]
}