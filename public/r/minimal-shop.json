{
  "name": "minimal-shop",
  "type": "registry:block",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "input",
    "select",
    "textarea"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport { useState } from \"react\";\r\nimport { ProductGrid } from \"./product-grid\";\r\nimport { CartDrawer } from \"./cart-drawer\";\r\nimport { ProductModal } from \"./product-modal\";\r\nimport { TopBar } from \"./top-bar\";\r\nimport { type Product, type CartItem, products } from \"./data\";\r\n\r\nexport default function MinimalShop() {\r\n    const [cart, setCart] = useState<CartItem[]>([]);\r\n    const [selectedProduct, setSelectedProduct] = useState<Product | null>(\r\n        null\r\n    );\r\n    const [isCartOpen, setIsCartOpen] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const addToCart = (product: Product, quantity: number = 1) => {\r\n        setCart((prev) => {\r\n            const exists = prev.find((item) => item.id === product.id);\r\n            if (exists) {\r\n                return prev.map((item) =>\r\n                    item.id === product.id\r\n                        ? { ...item, quantity: item.quantity + quantity }\r\n                        : item\r\n                );\r\n            }\r\n            return [...prev, { ...product, quantity }];\r\n        });\r\n    };\r\n\r\n    const removeFromCart = (productId: string) => {\r\n        setCart((prev) => prev.filter((item) => item.id !== productId));\r\n    };\r\n\r\n    const filteredProducts = products.filter((product) =>\r\n        product.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <div className=\"h-screen bg-zinc-50 dark:bg-zinc-950\">\r\n            <TopBar\r\n                cartItemCount={cart.length}\r\n                onCartClick={() => setIsCartOpen(true)}\r\n                onSearch={setSearchQuery}\r\n            />\r\n\r\n            <div className=\"mx-auto px-2 pt-12 pb-16\">\r\n                <ProductGrid\r\n                    products={filteredProducts}\r\n                    onProductSelect={setSelectedProduct}\r\n                />\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {selectedProduct && (\r\n                    <ProductModal\r\n                        product={selectedProduct}\r\n                        onClose={() => setSelectedProduct(null)}\r\n                        onAddToCart={(product) => {\r\n                            addToCart(product);\r\n                            setSelectedProduct(null);\r\n                            setIsCartOpen(true);\r\n                        }}\r\n                    />\r\n                )}\r\n            </AnimatePresence>\r\n\r\n            <AnimatePresence>\r\n                {isCartOpen && (\r\n                    <CartDrawer\r\n                        cart={cart}\r\n                        onClose={() => setIsCartOpen(false)}\r\n                        onRemoveFromCart={removeFromCart}\r\n                    />\r\n                )}\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n}",
      "path": "/components/workable/blocks/minimal-shop/minimal-shop.tsx",
      "target": "/components/workable/minimal-shop.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { Search, ShoppingBag, X } from \"lucide-react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"motion/react\";\r\nimport Link from \"next/link\";\r\n\r\ninterface TopBarProps {\r\n    cartItemCount: number;\r\n    onCartClick: () => void;\r\n    onSearch: (query: string) => void;\r\n}\r\n\r\nconst categories = [\r\n    \"All\",\r\n    \"Lighting\",\r\n    \"Kitchenware\",\r\n    \"Home Decor\",\r\n    \"Plants\",\r\n    \"Office\",\r\n    \"Textiles\",\r\n];\r\n\r\nexport function TopBar({ cartItemCount, onCartClick, onSearch }: TopBarProps) {\r\n    const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n    const [isScrolled, setIsScrolled] = useState(false);\r\n    const searchInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            setIsScrolled(window.scrollY > 10);\r\n        };\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        return () => window.removeEventListener(\"scroll\", handleScroll);\r\n    }, []);\r\n\r\n    const handleKeyPress = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Escape\") {\r\n            setIsSearchOpen(false);\r\n            searchInputRef.current?.blur();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`sticky top-0 z-40 transition-all duration-200 ${\r\n                isScrolled\r\n                    ? \"bg-white/90 dark:bg-zinc-900/90 shadow-sm\"\r\n                    : \"bg-white/80 dark:bg-zinc-900/80\"\r\n            } backdrop-blur-sm border-b border-zinc-200 dark:border-zinc-800`}\r\n        >\r\n            <div className=\"flex items-center justify-between px-3 h-12\">\r\n                <Link\r\n                    href=\"https://ui.workable.dev/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-sm font-medium shrink-0\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n\r\n                <div className=\"flex-1 px-8 overflow-x-auto flex items-center justify-center gap-6 scrollbar-none\">\r\n                    {categories.map((category) => (\r\n                        <button\r\n                            type=\"button\"\r\n                            key={category}\r\n                            className={`whitespace-nowrap transition-colors ${\r\n                                selectedCategory === category\r\n                                    ? \"text-zinc-900 dark:text-white text-sm font-medium\"\r\n                                    : \"text-zinc-500 dark:text-zinc-400 text-sm hover:text-zinc-900 dark:hover:text-white\"\r\n                            }`}\r\n                            onClick={() => setSelectedCategory(category)}\r\n                        >\r\n                            {category}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"flex items-center gap-1.5 shrink-0\">\r\n                    <motion.div\r\n                        className=\"relative overflow-hidden p-1\"\r\n                        initial={false}\r\n                        animate={{ width: isSearchOpen ? \"auto\" : 0 }}\r\n                    >\r\n                        <input\r\n                            ref={searchInputRef}\r\n                            type=\"text\"\r\n                            placeholder=\"Search products...\"\r\n                            className={`w-48 sm:w-56 bg-zinc-100 dark:bg-zinc-800 rounded-md text-sm px-3 py-1.5 \r\n                                focus:outline-none focus:ring-1 focus:ring-zinc-300 dark:focus:ring-zinc-700\r\n                                transition-all duration-200 ${\r\n                                    isSearchOpen ? \"opacity-100\" : \"opacity-0\"\r\n                                }`}\r\n                            onChange={(e) => onSearch(e.target.value)}\r\n                            onKeyDown={handleKeyPress}\r\n                        />\r\n                        {isSearchOpen && (\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    setIsSearchOpen(false);\r\n                                    onSearch(\"\");\r\n                                }}\r\n                                className=\"absolute right-2 top-1/2 -translate-y-1/2 p-0.5 hover:bg-zinc-200 \r\n                                    dark:hover:bg-zinc-700 rounded-full\"\r\n                            >\r\n                                <X className=\"w-4 h-4\" />\r\n                            </button>\r\n                        )}\r\n                    </motion.div>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsSearchOpen(!isSearchOpen)}\r\n                        className={`p-1.5 rounded-md transition-colors ${\r\n                            isSearchOpen\r\n                                ? \"bg-zinc-100 dark:bg-zinc-800\"\r\n                                : \"hover:bg-zinc-100 dark:hover:bg-zinc-800\"\r\n                        } z-10`}\r\n                    >\r\n                        <Search className=\"w-4 h-4\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={onCartClick}\r\n                        className=\"p-1.5 hover:bg-zinc-100 dark:hover:bg-zinc-800 rounded-md relative\"\r\n                    >\r\n                        <ShoppingBag className=\"w-4 h-4\" />\r\n                        {cartItemCount > 0 && (\r\n                            <motion.span\r\n                                initial={{ scale: 0.5 }}\r\n                                animate={{ scale: 1 }}\r\n                                className=\"absolute -top-1 -right-1 bg-zinc-900 dark:bg-white \r\n                                    text-white dark:text-zinc-900 text-xs font-medium w-4 h-4 \r\n                                    flex items-center justify-center rounded-full\"\r\n                            >\r\n                                {cartItemCount}\r\n                            </motion.span>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "path": "/components/workable/blocks/minimal-shop/top-bar.tsx",
      "target": "/components/workable/top-bar.tsx"
    },
    {
      "type": "registry:component",
      "content": "import { motion } from \"motion/react\";\r\nimport { type Product } from \"./data\";\r\n\r\ninterface ProductGridProps {\r\n    products: Product[];\r\n    onProductSelect: (product: Product) => void;\r\n}\r\n\r\nexport function ProductGrid({ products, onProductSelect }: ProductGridProps) {\r\n    return (\r\n        <div className=\"grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-6 gap-2\">\r\n            {products.map((product) => (\r\n                <motion.div\r\n                    key={product.id}\r\n                    layoutId={`product-${product.id}`}\r\n                    onClick={() => onProductSelect(product)}\r\n                    className=\"group cursor-pointer\"\r\n                    whileHover={{ y: -1 }}\r\n                    transition={{ duration: 0.2 }}\r\n                >\r\n                    <div className=\"aspect-[4/5] bg-white dark:bg-zinc-900 rounded-md overflow-hidden\">\r\n                        <img\r\n                            src={product.image}\r\n                            alt={product.name}\r\n                            className=\"w-full h-full object-cover object-center group-hover:scale-105 transition-transform duration-300\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-1.5 space-y-0.5\">\r\n                        <h3 className=\"text-xs font-medium truncate\">\r\n                            {product.name}\r\n                        </h3>\r\n                        <div className=\"flex justify-between items-center\">\r\n                            <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\r\n                                ${product.price}\r\n                            </p>\r\n                            <p className=\"text-[10px] text-zinc-400 dark:text-zinc-500\">\r\n                                {product.category}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    );\r\n} ",
      "path": "/components/workable/blocks/minimal-shop/product-grid.tsx",
      "target": "/components/workable/product-grid.tsx"
    },
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { motion } from \"motion/react\";\r\nimport { X, Plus, Minus } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport { type Product } from \"./data\";\r\n\r\ninterface ProductModalProps {\r\n    product: Product;\r\n    onClose: () => void;\r\n    onAddToCart: (product: Product) => void;\r\n}\r\n\r\nexport function ProductModal({\r\n    product,\r\n    onClose,\r\n    onAddToCart,\r\n}: ProductModalProps) {\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    return (\r\n        <>\r\n            <motion.div\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 0.5 }}\r\n                exit={{ opacity: 0 }}\r\n                className=\"fixed inset-0 bg-black\"\r\n                onClick={onClose}\r\n            />\r\n            <motion.div\r\n                layoutId={`product-${product.id}`}\r\n                className=\"fixed inset-x-4 bottom-0 md:inset-[25%] z-50 bg-white dark:bg-zinc-900 rounded-t-xl md:rounded-xl overflow-hidden max-h-[80vh] md:max-h-[500px]\"\r\n            >\r\n                <div className=\"h-full md:flex\">\r\n                    <div className=\"relative md:w-2/5\">\r\n                        <img\r\n                            src={product.image}\r\n                            alt={product.name}\r\n                            className=\"w-full h-[200px] md:h-full object-cover\"\r\n                        />\r\n                        <button\r\n                            onClick={onClose}\r\n                            className=\"absolute top-2 right-2 p-1.5 bg-white/80 dark:bg-black/50 backdrop-blur-sm rounded-full\"\r\n                        >\r\n                            <X className=\"w-4 h-4\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"p-3 md:w-3/5 flex flex-col\">\r\n                        <div className=\"flex-1\">\r\n                            <div className=\"flex justify-between items-start mb-2\">\r\n                                <div>\r\n                                    <h2 className=\"text-sm font-medium\">{product.name}</h2>\r\n                                    <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\r\n                                        {product.category}\r\n                                    </p>\r\n                                </div>\r\n                                <p className=\"text-sm font-medium\">${product.price}</p>\r\n                            </div>\r\n                            <div className=\"space-y-2\">\r\n                                <p className=\"text-xs text-zinc-600 dark:text-zinc-300\">\r\n                                    {product.description}\r\n                                </p>\r\n                                <div className=\"text-xs space-y-1\">\r\n                                    <p className=\"text-zinc-500\">SKU: {product.id}</p>\r\n                                    <p className=\"text-zinc-500\">Stock: Available</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            onClick={() => onAddToCart(product)}\r\n                            className=\"w-full mt-3 py-2 bg-zinc-900 dark:bg-white text-white dark:text-zinc-900 text-xs font-medium rounded-md hover:bg-zinc-800 dark:hover:bg-zinc-100 transition-colors\"\r\n                        >\r\n                            Add to Cart\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </>\r\n    );\r\n}",
      "path": "/components/workable/blocks/minimal-shop/product-modal.tsx",
      "target": "/components/workable/product-modal.tsx"
    },
    {
      "type": "registry:component",
      "content": "import { motion } from \"motion/react\";\r\nimport { X } from \"lucide-react\";\r\nimport { type CartItem } from \"./data\";\r\n\r\ninterface CartDrawerProps {\r\n    cart: CartItem[];\r\n    onClose: () => void;\r\n    onRemoveFromCart: (productId: string) => void;\r\n}\r\n\r\nexport function CartDrawer({\r\n    cart,\r\n    onClose,\r\n    onRemoveFromCart,\r\n}: CartDrawerProps) {\r\n    const total = cart.reduce(\r\n        (sum, item) => sum + item.price * item.quantity,\r\n        0\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <motion.div\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 0.5 }}\r\n                exit={{ opacity: 0 }}\r\n                className=\"fixed inset-0 bg-black\"\r\n                onClick={onClose}\r\n            />\r\n            <motion.div\r\n                initial={{ x: \"100%\" }}\r\n                animate={{ x: 0 }}\r\n                exit={{ x: \"100%\" }}\r\n                className=\"fixed right-0 z-50 top-0 h-full w-full sm:w-[400px] bg-white dark:bg-zinc-900 shadow-xl\"\r\n            >\r\n                <div className=\"flex flex-col h-full\">\r\n                    <div className=\"flex items-center justify-between p-4 border-b border-zinc-200 dark:border-zinc-800\">\r\n                        <h2 className=\"text-lg font-medium\">Shopping Cart</h2>\r\n                        <button\r\n                            onClick={onClose}\r\n                            className=\"p-2 hover:bg-zinc-100 dark:hover:bg-zinc-800 rounded-full\"\r\n                        >\r\n                            <X className=\"w-5 h-5\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                        {cart.map((item) => (\r\n                            <div\r\n                                key={item.id}\r\n                                className=\"flex gap-4 p-3 bg-zinc-50 dark:bg-zinc-800/50 rounded-lg\"\r\n                            >\r\n                                <img\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    className=\"w-24 h-24 object-cover rounded-md\"\r\n                                />\r\n                                <div className=\"flex-1 min-w-0\">\r\n                                    <div className=\"flex justify-between items-start\">\r\n                                        <h3 className=\"text-base font-medium truncate\">\r\n                                            {item.name}\r\n                                        </h3>\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                onRemoveFromCart(item.id)\r\n                                            }\r\n                                            className=\"p-1.5 hover:bg-zinc-200 dark:hover:bg-zinc-700 rounded-full ml-2\"\r\n                                        >\r\n                                            <X className=\"w-4 h-4\" />\r\n                                        </button>\r\n                                    </div>\r\n                                    <p className=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">\r\n                                        Qty: {item.quantity}\r\n                                    </p>\r\n                                    <p className=\"text-base font-medium mt-1\">\r\n                                        ${item.price * item.quantity}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"p-4 border-t border-zinc-200 dark:border-zinc-800\">\r\n                        <div className=\"flex justify-between mb-4\">\r\n                            <span className=\"text-base\">Total</span>\r\n                            <span className=\"text-base font-medium\">${total}</span>\r\n                        </div>\r\n                        <button className=\"w-full py-3 bg-zinc-900 dark:bg-white text-white dark:text-zinc-900 text-base font-medium rounded-lg hover:bg-zinc-800 dark:hover:bg-zinc-100 transition-colors\">\r\n                            Checkout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </>\r\n    );\r\n}",
      "path": "/components/workable/blocks/minimal-shop/cart-drawer.tsx",
      "target": "/components/workable/cart-drawer.tsx"
    },
    {
      "type": "registry:component",
      "content": "export interface Product {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n    image: string;\r\n    category: string;\r\n}\r\n\r\nexport interface CartItem extends Product {\r\n    quantity: number;\r\n}\r\n\r\nexport const products: Product[] = [\r\n    {\r\n        id: \"p1\",\r\n        name: \"Minimal Desk Lamp\",\r\n        description:\r\n            \"A sleek and modern desk lamp with adjustable brightness and color temperature.\",\r\n        price: 89,\r\n        image: \"https://images.unsplash.com/photo-1507473885765-e6ed057f782c?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Lighting\",\r\n    },\r\n    {\r\n        id: \"p2\",\r\n        name: \"Ceramic Coffee Set\",\r\n        description:\r\n            \"Handcrafted ceramic coffee set including 4 cups and a matching pour-over dripper.\",\r\n        price: 65,\r\n        image: \"https://images.unsplash.com/photo-1517256064527-09c73fc73e38?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Kitchenware\",\r\n    },\r\n    {\r\n        id: \"p3\",\r\n        name: \"Linen Throw Pillow\",\r\n        description: \"Soft linen throw pillow with minimalist pattern design.\",\r\n        price: 45,\r\n        image: \"https://images.unsplash.com/photo-1579656381226-5fc0f0100c3b?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Home Decor\",\r\n    },\r\n    {\r\n        id: \"p4\",\r\n        name: \"Wooden Wall Clock\",\r\n        description: \"Modern wooden wall clock with silent movement.\",\r\n        price: 79,\r\n        image: \"https://images.unsplash.com/photo-1563861826100-9cb868fdbe1c?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Home Decor\",\r\n    },\r\n    {\r\n        id: \"p5\",\r\n        name: \"Concrete Planter\",\r\n        description: \"Minimalist concrete planter perfect for succulents.\",\r\n        price: 34,\r\n        image: \"https://images.unsplash.com/photo-1485955900006-10f4d324d411?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Plants\",\r\n    },\r\n    {\r\n        id: \"p6\",\r\n        name: \"Glass Vase Set\",\r\n        description: \"Set of 3 minimalist glass vases in varying sizes.\",\r\n        price: 55,\r\n        image: \"https://images.unsplash.com/photo-1581783898377-1c85bf937427?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Home Decor\",\r\n    },\r\n    {\r\n        id: \"p7\",\r\n        name: \"Bamboo Organizer\",\r\n        description: \"Desk organizer made from sustainable bamboo.\",\r\n        price: 42,\r\n        image: \"https://images.unsplash.com/photo-1591129841117-3adfd313e34f?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Office\",\r\n    },\r\n    {\r\n        id: \"p9\",\r\n        name: \"Marble Coasters\",\r\n        description: \"Set of 4 marble coasters with cork backing.\",\r\n        price: 38,\r\n        image: \"https://images.unsplash.com/photo-1616594039964-ae9021a400a0?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Kitchenware\",\r\n    },\r\n    {\r\n        id: \"p10\",\r\n        name: \"Brass Bookends\",\r\n        description: \"Modern geometric brass bookends, set of 2.\",\r\n        price: 68,\r\n        image: \"https://images.unsplash.com/photo-1544457070-4cd773b4d71e?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Office\",\r\n    },\r\n    {\r\n        id: \"p11\",\r\n        name: \"Ceramic Plant Pot\",\r\n        description: \"Handmade ceramic plant pot with drainage hole.\",\r\n        price: 48,\r\n        image: \"https://images.unsplash.com/photo-1485955900006-10f4d324d411?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Plants\",\r\n    },\r\n    {\r\n        id: \"p12\",\r\n        name: \"Wall Mirror\",\r\n        description: \"Round wall mirror with minimal metal frame.\",\r\n        price: 120,\r\n        image: \"https://images.unsplash.com/photo-1618220179428-22790b461013?w=400&h=300&fit=crop&q=80\",\r\n        category: \"Home Decor\",\r\n    },\r\n];",
      "path": "/components/workable/blocks/minimal-shop/data.ts",
      "target": "/components/workable/data.ts"
    },
    {
      "type": "registry:component",
      "content": "import { Search, ShoppingBag } from \"lucide-react\";\r\n\r\nimport { Menu } from \"lucide-react\";\r\n\r\ninterface HeaderProps {\r\n    cartCount: number;\r\n    onCartOpen: () => void;\r\n    searchQuery: string;\r\n    onSearchChange: (query: string) => void;\r\n}\r\n\r\nexport function Header({\r\n    cartCount,\r\n    onCartOpen,\r\n    searchQuery,\r\n    onSearchChange,\r\n}: HeaderProps) {\r\n    return (\r\n        <header className=\"fixed w-full top-0 z-40 bg-white/80 dark:bg-zinc-950/80 backdrop-blur-xl border-b border-zinc-200 dark:border-zinc-800\">\r\n            <div className=\"container mx-auto px-4\">\r\n                <div className=\"h-16 flex items-center justify-between gap-4\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"p-2 hover:bg-zinc-100 dark:hover:bg-zinc-900 rounded-full\"\r\n                        >\r\n                            <Menu className=\"w-4 h-4\" />\r\n                        </button>\r\n                        <span className=\"text-sm font-medium\">Store</span>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 max-w-md\">\r\n                        <div className=\"relative\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={searchQuery}\r\n                                onChange={(e) => onSearchChange(e.target.value)}\r\n                                placeholder=\"Search products...\"\r\n                                className=\"w-full h-9 pl-9 pr-4 text-sm bg-zinc-100 dark:bg-zinc-900 rounded-full focus:outline-none focus:ring-2 focus:ring-zinc-300 dark:focus:ring-zinc-700\"\r\n                            />\r\n                            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={onCartOpen}\r\n                        className=\"relative p-2 hover:bg-zinc-100 dark:hover:bg-zinc-900 rounded-full\"\r\n                    >\r\n                        <ShoppingBag className=\"w-4 h-4\" />\r\n                        {cartCount > 0 && (\r\n                            <span className=\"absolute -top-1 -right-1 w-4 h-4 text-[10px] font-medium flex items-center justify-center bg-zinc-900 dark:bg-white text-white dark:text-zinc-900 rounded-full\">\r\n                                {cartCount}\r\n                            </span>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}",
      "path": "/components/workable/blocks/minimal-shop/header.tsx",
      "target": "/components/workable/header.tsx"
    }
  ]
}