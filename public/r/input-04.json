{
  "name": "input-04",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface NumericInputProps {\r\n    min?: number;\r\n    max?: number;\r\n    step?: number;\r\n    defaultValue?: number;\r\n}\r\n\r\nexport default function Input_04({\r\n    min = 0,\r\n    max = 100,\r\n    step = 1,\r\n    defaultValue = 50,\r\n}: NumericInputProps) {\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [isFocused, setIsFocused] = useState(false);\r\n\r\n    const percentage = ((value - min) / (max - min)) * 100;\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = Number.parseFloat(e.target.value);\r\n        if (!Number.isNaN(newValue) && newValue >= min && newValue <= max) {\r\n            setValue(newValue);\r\n        }\r\n    };\r\n\r\n    const incrementValue = () => {\r\n        const newValue = Math.min(value + step, max);\r\n        setValue(newValue);\r\n    };\r\n\r\n    const decrementValue = () => {\r\n        const newValue = Math.max(value - step, min);\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full max-w-xs\">\r\n            <div className=\"relative\">\r\n                <div\r\n                    className={cn(\r\n                        \"flex items-center rounded-lg border\",\r\n                        \"border-zinc-200 dark:border-zinc-800\",\r\n                        \"bg-white dark:bg-black/5\",\r\n                        isFocused && \"ring-2 ring-zinc-300 dark:ring-zinc-700\"\r\n                    )}\r\n                >\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={decrementValue}\r\n                        className=\"px-3 py-2 hover:bg-zinc-100 \r\n                        dark:hover:bg-zinc-800\r\n                        text-zinc-500 dark:text-zinc-400 transition-colors\"\r\n                        aria-label=\"Decrement button\"\r\n                    >\r\n                        -\r\n                    </button>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        onFocus={() => setIsFocused(true)}\r\n                        onBlur={() => setIsFocused(false)}\r\n                        min={min}\r\n                        max={max}\r\n                        step={step}\r\n                        className=\"w-full text-center border-none bg-transparent focus:outline-hidden \r\n                        [-moz-appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none \r\n                        [&::-webkit-inner-spin-button]:appearance-none\r\n                        text-zinc-900 dark:text-zinc-100\"\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={incrementValue}\r\n                        className=\"px-3 py-2 hover:bg-zinc-100 \r\n                        dark:hover:bg-zinc-800\r\n                        text-zinc-500 dark:text-zinc-400 transition-colors\"\r\n                        aria-label=\"Increment button\"\r\n                    >\r\n                        +\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"mt-2 h-1.5 rounded-full bg-zinc-100 dark:bg-zinc-800 overflow-hidden\">\r\n                    <div\r\n                        className=\"h-full bg-zinc-300 dark:bg-zinc-600 transition-all duration-200\"\r\n                        style={{ width: `${percentage}%` }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mt-1 flex justify-between text-xs text-zinc-400 dark:text-zinc-500\">\r\n                    <span>{min}</span>\r\n                    <span>{max}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "path": "input-04.tsx",
      "target": "components/workable/input-04.tsx"
    }
  ]
}