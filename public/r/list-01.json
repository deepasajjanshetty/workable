{
  "name": "list-01",
  "type": "registry:component",
  "registryDependencies": [],
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "import { cn } from \"@/lib/utils\";\r\nimport { MessageSquare, type LucideIcon, Music, Store } from \"lucide-react\";\r\n\r\ninterface ListItem {\r\n    id: string;\r\n    title: string;\r\n    description?: string;\r\n    icon: LucideIcon;\r\n    iconStyle: string;\r\n    time: string;\r\n    badge?: {\r\n        text: string;\r\n        variant: \"pink\" | \"indigo\" | \"orange\";\r\n    };\r\n    starred?: boolean;\r\n}\r\n\r\ninterface List01Props {\r\n    items?: ListItem[];\r\n    className?: string;\r\n}\r\n\r\nconst iconStyles = {\r\n    music: \"from-pink-500/20 to-pink-500/10 text-pink-600 dark:from-pink-400/20 dark:to-pink-400/10 dark:text-pink-400\",\r\n    store: \"from-indigo-500/20 to-indigo-500/10 text-indigo-600 dark:from-indigo-400/20 dark:to-indigo-400/10 dark:text-indigo-400\",\r\n    message:\r\n        \"from-emerald-500/20 to-emerald-500/10 text-emerald-600 dark:from-emerald-400/20 dark:to-emerald-400/10 dark:text-emerald-400\",\r\n};\r\n\r\nconst ITEMS: ListItem[] = [\r\n    {\r\n        id: \"1\",\r\n        title: \"iMessage\",\r\n        description:\r\n            'John sent you a message: \"Hey, what do you think about...\"',\r\n        icon: MessageSquare,\r\n        iconStyle: \"message\",\r\n        time: \"now\",\r\n        badge: { text: \"New\", variant: \"orange\" },\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Apple Music\",\r\n        description: \"Your Daily Mix is ready with 25 new songs\",\r\n        icon: Music,\r\n        iconStyle: \"music\",\r\n        time: \"2 min ago\",\r\n        badge: { text: \"Music\", variant: \"pink\" },\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"App Store\",\r\n        description: \"Figma has been updated to version 2.0\",\r\n        icon: Store,\r\n        iconStyle: \"store\",\r\n        time: \"5 min ago\",\r\n        badge: { text: \"Update\", variant: \"indigo\" },\r\n    },\r\n];\r\n\r\nconst badgeVariants = {\r\n    pink: \"bg-pink-500/10 text-pink-600 dark:bg-pink-400/10 dark:text-pink-300\",\r\n    indigo: \"bg-indigo-500/10 text-indigo-600 dark:bg-indigo-400/10 dark:text-indigo-300\",\r\n    orange: \"bg-orange-500/10 text-orange-600 dark:bg-orange-400/10 dark:text-orange-300\",\r\n};\r\n\r\nexport default function List01({ items = ITEMS, className }: List01Props) {\r\n    return (\r\n        <div\r\n            className={cn(\r\n                \"w-full max-w-2xl mx-auto p-4\",\r\n                \"bg-white/50 dark:bg-zinc-900/50 backdrop-blur-xl\",\r\n                \"rounded-3xl border border-white/20 dark:border-zinc-800/50\",\r\n                \"shadow-sm\",\r\n                className\r\n            )}\r\n        >\r\n            <div className=\"space-y-3\">\r\n                {items.map((item) => (\r\n                    <div\r\n                        key={item.id}\r\n                        className={cn(\r\n                            \"group relative flex items-start gap-4 p-4\",\r\n                            \"bg-white/50 dark:bg-zinc-800/50\",\r\n                            \"hover:bg-white/80 dark:hover:bg-zinc-700/50\",\r\n                            \"backdrop-blur-lg\",\r\n                            \"transition-all duration-300 ease-out\",\r\n                            \"rounded-2xl\",\r\n                            \"border border-white/20 dark:border-zinc-700/50\",\r\n                            \"shadow-xs hover:shadow-sm\"\r\n                        )}\r\n                    >\r\n                        <div\r\n                            className={cn(\r\n                                \"shrink-0 p-3 rounded-2xl\",\r\n                                \"bg-linear-to-br\",\r\n                                iconStyles[\r\n                                    item.iconStyle as keyof typeof iconStyles\r\n                                ],\r\n                                \"shadow-xs border border-white/10 dark:border-zinc-700/50\",\r\n                                \"transition-colors duration-300\"\r\n                            )}\r\n                        >\r\n                            <item.icon className=\"w-5 h-5\" />\r\n                        </div>\r\n\r\n                        <div className=\"flex-1 min-w-0 pt-0.5\">\r\n                            <div className=\"flex items-center gap-2 mb-1\">\r\n                                <h3 className=\"text-base font-semibold text-zinc-900 dark:text-zinc-100\">\r\n                                    {item.title}\r\n                                </h3>\r\n                                {item.badge && (\r\n                                    <span\r\n                                        className={cn(\r\n                                            \"px-2.5 py-0.5 rounded-full text-xs font-medium\",\r\n                                            \"transition-colors duration-300\",\r\n                                            \"shadow-xs\",\r\n                                            badgeVariants[\r\n                                                item.badge\r\n                                                    .variant as keyof typeof badgeVariants\r\n                                            ]\r\n                                        )}\r\n                                    >\r\n                                        {item.badge.text}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            {item.description && (\r\n                                <p className=\"text-[15px] text-zinc-600 dark:text-zinc-300 leading-relaxed line-clamp-2\">\r\n                                    {item.description}\r\n                                </p>\r\n                            )}\r\n                            <span className=\"text-xs font-medium text-zinc-400 dark:text-zinc-500 mt-2 block\">\r\n                                {item.time}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "path": "/components/workable/list/list-01.tsx",
      "target": "/components/workable/list-01.tsx"
    }
  ]
}