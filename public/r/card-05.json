{
  "name": "card-05",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport {\r\n    Activity,\r\n    ArrowUpRight,\r\n    Plus,\r\n    Target,\r\n    CheckCircle2,\r\n} from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface Metric {\r\n    label: string;\r\n    value: string;\r\n    trend: number;\r\n    unit?: \"cal\" | \"min\" | \"hrs\";\r\n}\r\n\r\nexport interface Goal {\r\n    id: string;\r\n    title: string;\r\n    isCompleted: boolean;\r\n}\r\n\r\ninterface ActivityCardProps {\r\n    category?: string;\r\n    title?: string;\r\n    metrics?: Metric[];\r\n    dailyGoals?: Goal[];\r\n    onAddGoal?: () => void;\r\n    onToggleGoal?: (goalId: string) => void;\r\n    onViewDetails?: () => void;\r\n    className?: string;\r\n}\r\n\r\nconst METRIC_COLORS = {\r\n    Move: \"#FF2D55\",\r\n    Exercise: \"#2CD758\",\r\n    Stand: \"#007AFF\",\r\n} as const;\r\n\r\nfunction CardDetails({\r\n    category = \"Activity\",\r\n    title = \"Today's Progress\",\r\n    metrics = [],\r\n    dailyGoals = [],\r\n    onAddGoal,\r\n    onToggleGoal,\r\n    onViewDetails,\r\n    className,\r\n}: ActivityCardProps) {\r\n    const [isHovering, setIsHovering] = useState<string | null>(null);\r\n\r\n    const handleGoalToggle = (goalId: string) => {\r\n        onToggleGoal?.(goalId);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={cn(\r\n                \"relative h-full rounded-3xl p-6\",\r\n                \"bg-white dark:bg-black/5\",\r\n                \"border border-zinc-200 dark:border-zinc-800\",\r\n                \"hover:border-zinc-300 dark:hover:border-zinc-700\",\r\n                \"transition-all duration-300\",\r\n                className\r\n            )}\r\n        >\r\n            {/* Header */}\r\n            <div className=\"flex items-center gap-3 mb-6\">\r\n                <div className=\"p-2 rounded-full bg-zinc-100 dark:bg-zinc-800/50\">\r\n                    <Activity className=\"w-5 h-5 text-[#FF2D55]\" />\r\n                </div>\r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold text-zinc-900 dark:text-white\">\r\n                        {title}\r\n                    </h3>\r\n                    <p className=\"text-sm text-zinc-500 dark:text-zinc-400\">\r\n                        {category}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n                {metrics.map((metric, index) => (\r\n                    <div\r\n                        key={metric.label}\r\n                        className=\"relative flex flex-col items-center\"\r\n                        onMouseEnter={() => setIsHovering(metric.label)}\r\n                        onMouseLeave={() => setIsHovering(null)}\r\n                    >\r\n                        <div className=\"relative w-24 h-24\">\r\n                            <div className=\"absolute inset-0 rounded-full border-4 border-zinc-200 dark:border-zinc-800/50\" />\r\n                            <div\r\n                                className={cn(\r\n                                    \"absolute inset-0 rounded-full border-4 transition-all duration-500\",\r\n                                    isHovering === metric.label && \"scale-105\"\r\n                                )}\r\n                                style={{\r\n                                    borderColor:\r\n                                        METRIC_COLORS[\r\n                                            metric.label as keyof typeof METRIC_COLORS\r\n                                        ],\r\n                                    clipPath: `polygon(0 0, 100% 0, 100% ${metric.trend}%, 0 ${metric.trend}%)`,\r\n                                }}\r\n                            />\r\n                            <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\r\n                                <span className=\"text-xl font-bold text-zinc-900 dark:text-white\">\r\n                                    {metric.value}\r\n                                </span>\r\n                                <span className=\"text-xs text-zinc-500 dark:text-zinc-400\">\r\n                                    {metric.unit}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"mt-3 text-sm font-medium text-zinc-700 dark:text-zinc-300\">\r\n                            {metric.label}\r\n                        </span>\r\n                        <span className=\"text-xs text-zinc-500\">\r\n                            {metric.trend}%\r\n                        </span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"mt-8 space-y-6\">\r\n                <div className=\"h-px bg-linear-to-r from-transparent via-zinc-200 dark:via-zinc-800 to-transparent\" />\r\n\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <h4 className=\"flex items-center gap-2 text-sm font-medium text-zinc-700 dark:text-zinc-300\">\r\n                            <Target className=\"w-4 h-4\" />\r\n                            Today's Goals\r\n                        </h4>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={onAddGoal}\r\n                            className=\"p-1.5 rounded-full hover:bg-zinc-100 dark:hover:bg-zinc-800 transition-colors\"\r\n                        >\r\n                            <Plus className=\"w-4 h-4 text-zinc-500 dark:text-zinc-400\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                        {dailyGoals.map((goal) => (\r\n                            <button\r\n                                type=\"button\"\r\n                                key={goal.id}\r\n                                onClick={() => handleGoalToggle(goal.id)}\r\n                                className={cn(\r\n                                    \"w-full flex items-center gap-3 p-3 rounded-xl\",\r\n                                    \"bg-zinc-50 dark:bg-zinc-900/50\",\r\n                                    \"border border-zinc-200/50 dark:border-zinc-800/50\",\r\n                                    \"hover:border-zinc-300/50 dark:hover:border-zinc-700/50\",\r\n                                    \"transition-all\"\r\n                                )}\r\n                            >\r\n                                <CheckCircle2\r\n                                    className={cn(\r\n                                        \"w-5 h-5\",\r\n                                        goal.isCompleted\r\n                                            ? \"text-emerald-500\"\r\n                                            : \"text-zinc-400 dark:text-zinc-600\"\r\n                                    )}\r\n                                />\r\n                                <span\r\n                                    className={cn(\r\n                                        \"text-sm text-left\",\r\n                                        goal.isCompleted\r\n                                            ? \"text-zinc-500 dark:text-zinc-400 line-through\"\r\n                                            : \"text-zinc-700 dark:text-zinc-300\"\r\n                                    )}\r\n                                >\r\n                                    {goal.title}\r\n                                </span>\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"pt-4 border-t border-zinc-200 dark:border-zinc-800\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={onViewDetails}\r\n                        className=\"inline-flex items-center gap-2 text-sm font-medium\r\n              text-zinc-600 hover:text-zinc-900 \r\n              dark:text-zinc-400 dark:hover:text-white\r\n              transition-colors duration-200\"\r\n                    >\r\n                        View Activity Details\r\n                        <ArrowUpRight className=\"w-4 h-4\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst INITIAL_METRICS: Metric[] = [\r\n    { label: \"Move\", value: \"420\", trend: 85, unit: \"cal\" },\r\n    { label: \"Exercise\", value: \"35\", trend: 70, unit: \"min\" },\r\n    { label: \"Stand\", value: \"10\", trend: 83, unit: \"hrs\" },\r\n];\r\n\r\nconst INITIAL_GOALS: Goal[] = [\r\n    { id: \"1\", title: \"30min Morning Yoga\", isCompleted: true },\r\n    { id: \"2\", title: \"10k Steps\", isCompleted: false },\r\n    { id: \"3\", title: \"Drink 2L Water\", isCompleted: true },\r\n];\r\n\r\nexport default function Card05() {\r\n    const [goals, setGoals] = useState<Goal[]>(INITIAL_GOALS);\r\n    const [metrics, setMetrics] = useState<Metric[]>(INITIAL_METRICS);\r\n\r\n    const handleToggleGoal = (goalId: string) => {\r\n        setGoals((prev) =>\r\n            prev.map((goal) =>\r\n                goal.id === goalId\r\n                    ? { ...goal, isCompleted: !goal.isCompleted }\r\n                    : goal\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleAddGoal = () => {\r\n        const newGoal: Goal = {\r\n            id: `goal-${goals.length + 1}`,\r\n            title: `New Goal ${goals.length + 1}`,\r\n            isCompleted: false,\r\n        };\r\n        setGoals((prev) => [...prev, newGoal]);\r\n    };\r\n\r\n    const handleViewDetails = () => {\r\n        console.log(\"Viewing details\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-8\">\r\n            <div className=\"max-w-md mx-auto\">\r\n                <CardDetails\r\n                    metrics={metrics}\r\n                    dailyGoals={goals}\r\n                    onAddGoal={handleAddGoal}\r\n                    onToggleGoal={handleToggleGoal}\r\n                    onViewDetails={handleViewDetails}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "path": "card-05.tsx",
      "target": "components/workable/card-05.tsx"
    }
  ]
}