{
  "name": "btn-10",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Sun, Moon, Laptop } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\n\r\ntype ThemeMode = \"light\" | \"dark\" | \"system\";\r\n\r\ninterface Btn10Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n    variant?: \"pill\" | \"minimal\" | \"ghost\";\r\n    size?: \"sm\" | \"default\" | \"lg\";\r\n    showLabel?: boolean;\r\n    defaultMode?: ThemeMode;\r\n    onModeChange?: (mode: ThemeMode) => void;\r\n}\r\n\r\nexport default function Btn10({\r\n    className,\r\n    variant = \"minimal\",\r\n    size = \"default\",\r\n    showLabel = true,\r\n    defaultMode = \"system\",\r\n    onModeChange,\r\n    ...props\r\n}: Btn10Props) {\r\n    const [mode, setMode] = useState<ThemeMode>(defaultMode);\r\n\r\n    const handleClick = () => {\r\n        const modes: ThemeMode[] = [\"light\", \"dark\", \"system\"];\r\n        const currentIndex = modes.indexOf(mode);\r\n        const nextMode = modes[(currentIndex + 1) % modes.length];\r\n        setMode(nextMode);\r\n        onModeChange?.(nextMode);\r\n    };\r\n\r\n    const getIcon = () => {\r\n        switch (mode) {\r\n            case \"light\":\r\n                return Sun;\r\n            case \"dark\":\r\n                return Moon;\r\n            case \"system\":\r\n                return Laptop;\r\n        }\r\n    };\r\n\r\n    const Icon = getIcon();\r\n\r\n    const variants = {\r\n        pill: [\r\n            \"rounded-full\",\r\n            \"bg-linear-to-b from-white to-zinc-50\",\r\n            \"dark:from-zinc-900 dark:to-zinc-800\",\r\n            \"border border-zinc-200 dark:border-zinc-800\",\r\n            \"hover:border-zinc-300 dark:hover:border-zinc-700\",\r\n            \"shadow-xs\",\r\n        ],\r\n        minimal: [\r\n            \"rounded-lg\",\r\n            \"bg-zinc-100 dark:bg-zinc-800\",\r\n            \"hover:bg-zinc-200 dark:hover:bg-zinc-700\",\r\n        ],\r\n        ghost: [\r\n            \"rounded-lg\",\r\n            \"hover:bg-zinc-100 dark:hover:bg-zinc-800\",\r\n            \"border border-zinc-200 dark:border-zinc-800\",\r\n        ],\r\n    };\r\n\r\n    const sizes = {\r\n        sm: \"h-8 px-3 text-sm\",\r\n        default: \"h-10 px-4\",\r\n        lg: \"h-11 px-5\",\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            className={cn(\r\n                \"relative group transition-all duration-200\",\r\n                \"text-zinc-600 dark:text-zinc-300\",\r\n                variants[variant],\r\n                sizes[size],\r\n                className\r\n            )}\r\n            onClick={handleClick}\r\n            {...props}\r\n        >\r\n            <div\r\n                className={cn(\r\n                    \"flex items-center gap-2\",\r\n                    \"transition-all duration-200\"\r\n                )}\r\n            >\r\n                <Icon\r\n                    className={cn(\r\n                        \"transition-all duration-200\",\r\n                        size === \"sm\" && \"w-3.5 h-3.5\",\r\n                        size === \"default\" && \"w-4 h-4\",\r\n                        size === \"lg\" && \"w-5 h-5\",\r\n                        \"group-hover:rotate-[-8deg] group-hover:scale-110\",\r\n                        \"group-active:scale-95\"\r\n                    )}\r\n                />\r\n                {showLabel && <span className=\"capitalize\">{mode}</span>}\r\n            </div>\r\n            <span\r\n                className={cn(\r\n                    \"absolute inset-0\",\r\n                    \"bg-linear-to-r from-zinc-500/0 via-zinc-500/10 to-zinc-500/0\",\r\n                    \"translate-x-[-50%]\",\r\n                    \"group-hover:translate-x-[50%]\",\r\n                    \"transition-transform duration-500\",\r\n                    \"ease-out\"\r\n                )}\r\n            />\r\n        </Button>\r\n    );\r\n}",
      "path": "btn-10.tsx",
      "target": "components/workable/btn-10.tsx"
    }
  ]
}